/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.9).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-10-31T14:28:58.734Z")

@Api(value = "server", description = "the server API")
public interface ServerApi {

    @ApiOperation(value = "List directory", nickname = "directoryUsingGET1", notes = "", response = String.class, responseContainer = "List", tags={ "server-exploration-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Bad request"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found"),
        @ApiResponse(code = 500, message = "Server error") })
    @RequestMapping(value = "/server/exploration/directory",
        produces = { "application/json", "application/hal+json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<String>> directoryUsingGET1(@ApiParam(value = "The path to be read") @Valid @RequestParam(value = "path", required = false) String path);


    @ApiOperation(value = "List Spring environment properties", nickname = "springEnvironmentUsingGET1", notes = "", response = Map.class, responseContainer = "Map", tags={ "server-exploration-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Map.class, responseContainer = "Map"),
        @ApiResponse(code = 400, message = "Bad request"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found"),
        @ApiResponse(code = 500, message = "Server error") })
    @RequestMapping(value = "/server/exploration/environment/spring",
        produces = { "application/json", "application/hal+json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Map<String, String>> 
    springEnvironmentUsingGET1(@ApiParam(value = "The name of the property to be read") @Valid @RequestParam(value = "propertyName", required = false) String propertyName,@ApiParam(value = "The PropertySource to be read") @Valid @RequestParam(value = "propertySourceName", required = false) String propertySourceName);


    @ApiOperation(value = "List System environment properties", nickname = "systemEnvironmentUsingGET1", notes = "", response = String.class, responseContainer = "Map", tags={ "server-exploration-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Map.class, responseContainer = "Map"),
        @ApiResponse(code = 400, message = "Bad request"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found"),
        @ApiResponse(code = 500, message = "Server error") })
    @RequestMapping(value = "/server/exploration/environment/system",
        produces = { "application/json", "application/hal+json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Map<String, String>> systemEnvironmentUsingGET1(@ApiParam(value = "The name of the property to be read") @Valid @RequestParam(value = "propertyName", required = false) String propertyName);

}
